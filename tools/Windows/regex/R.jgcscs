JGCSCS
5
R
*.r
Just Great Software
support@editpadpro.com
http://www.editpadpro.com
http://www.r-project.org
TRUE
#

0
5
r <- function(a, b, c) {
  # R
  str <- "hello world"
  score <- 10
}
0
FALSE
17
Prompt

^>
FALSE
FALSE
26
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Comment

#.*+
FALSE
FALSE
9
0


0
TRUE
FALSE
FALSE
FALSE




FALSE

Reserved words

\b(?>if|else|repeat|while|function|for|in|next|break|TRUE|FALSE|NULL|Inf|NaN|NA(?:_(?:integer|real|complex|character)_)?+)\b|\.\.(?:\.|\d\b)
FALSE
FALSE
12
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Hexadecimal number

\b0x[0-9A-F]++\b
TRUE
FALSE
19
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Numeric, integer and imaginary constants

\b(?:[0-9]++(?:\.[0-9]*+)?|\.[0-9]++)(?:[eE][+-]?+[0-9]++)?[Li]?\b
FALSE
FALSE
20
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Single-quoted string
Closing quote optional so an unclosed string is still colored as a string
(')[^'\\\r\n]*+(?:\\(?:.|$)[^'\\\r\n]*+)*+(')?
FALSE
FALSE
17
0


0
TRUE
FALSE
FALSE
FALSE
1
2

code
FALSE
'
Double-quoted string
Closing quote optional so an unclosed string is still colored as a string
(")[^"\\\r\n]*+(?:\\(?:.|$)[^"\\\r\n]*+)*+(")?
FALSE
FALSE
17
0


0
TRUE
FALSE
FALSE
FALSE
1
2

code
FALSE
"
User-defined operator

(%)[^%\r\n]*+(%)?
FALSE
FALSE
23
0


0
FALSE
FALSE
FALSE
FALSE
1
2

code
FALSE
%
Operator

[-+*/^=<>!&|~$:]++
FALSE
FALSE
23
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Opening bracket

{
FALSE
FALSE
25
0


0
FALSE
FALSE
FALSE
FALSE
0

{}
code
FALSE
}
Closing bracket

}
FALSE
FALSE
25
0


0
FALSE
FALSE
FALSE
FALSE

0
{}
code
FALSE
{
Double brackets
We highlight double brackets separately, so bracket matching won't use half a double bracket to match a single bracket
\[\[
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE
0

[[]]
code
FALSE
]]
Double brackets
We highlight double brackets separately, so bracket matching won't use half a double bracket to match a single bracket
\]\]
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE

0
[[]]
code
FALSE
[[
Opening bracket

\[
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE
0

[]
code
FALSE
]
Closing bracket

]
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE

0
[]
code
FALSE
[
Opening parenthesis

\(
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE
0

()
code
FALSE
)
Closing parenthesis

\)
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE

0
()
code
FALSE
(
0
0
