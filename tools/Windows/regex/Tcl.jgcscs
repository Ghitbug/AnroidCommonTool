JGCSCS
5
Tcl
*.tcl
Just Great Software
support@editpadpro.com
http://www.editpadpro.com
http://www.tcl.tk
TRUE
#

0
2
#!/usr/bin/tcl
puts [regsub -all {regex} $subject "replace $variable"]
0
TRUE
16
Comment

#
FALSE
FALSE
9
0


3
FALSE
FALSE
FALSE
FALSE




FALSE

Substitution

\$(?:\w++|{[^}]++}?+)
FALSE
FALSE
14
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Switch

-(?:[a-z_][a-z0-9_]*|-)
TRUE
FALSE
15
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Quoted word

"
FALSE
FALSE
17
0


4
FALSE
FALSE
FALSE
FALSE
0

"
code
FALSE
"
Braces

{
FALSE
FALSE
25
0


0
FALSE
FALSE
FALSE
FALSE
0

{}
code
FALSE
}
Braces

}
FALSE
FALSE
25
0


0
FALSE
FALSE
FALSE
FALSE

0
{}
code
FALSE
{
Command start

\[
FALSE
FALSE
25
0


0
FALSE
FALSE
FALSE
FALSE
0

[]
code
FALSE
]
Command end

]
FALSE
FALSE
25
0


0
FALSE
FALSE
FALSE
FALSE

0
[]
code
FALSE
[
Opening parenthesis

\(
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE
0

()
code
FALSE
)
Closing parenthesis

\)
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE

0
()
code
FALSE
(
Line continuation

\\\r?\n
FALSE
FALSE
23
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Escaped character

\\.
FALSE
FALSE
0
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Float

(?>\b[0-9]++\.[0-9]++|\.[0-9]++)(?>E[+-]?+[0-9]++)?[FL]?+\b
TRUE
FALSE
20
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Integer

\b[0-9]++\b
FALSE
FALSE
19
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Hexadecimal

\b0x[a-f0-9]++\b
TRUE
FALSE
19
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Commands

38
\b(?>
after(?>[ \t]++(?>cancel|idle)\b)?
|append
|array(?>[ \t]++(?>anymore|donesearch|exists|get|names|nextelement|set|size|startsearch|statistics|unset)\b)?
|auto_execok|auto_import|auto_load|auto_mkindex(?:_old)?|auto_qualify|auto_reset|parray|tcl_endOfWord|tcl_findLibrary|tcl_startOfNextWord|tcl_startOfPreviousWord|tcl_wordBreakAfter|tcl_wordBreakBefore
|bgerror
|binary(?>[ \t]++(?>format|scan)\b)?
|break|catch|cd
|chan(?>[ \t]++(?>blocked|close|configure|copy|create|eof|event|flush|gets|names|pending|postevent|puts|read|seek|tell|truncate)\b)?
|clock(?>[ \t]++(?>add|clicks|format|microseconds|milliseconds|scan|seconds)\b)?
|close|concat|continue
|dde(?>[ \t]++(?>servername|execute|poke|request|services|eval)\b)?
|dict(?>[ \t]++(?>create|exists|filter|for|get|incr|info|keys|lappend|merge|remove|replace|set|size|unset|update|values|with)\b)?
|encoding(?>[ \t]++(?>convert(?>from|to)|dirs|names|system)\b)?
|eof|error|eval|exec|exit|expr|fblocked|fconfigure|fcopy
|file(?>event|name|[ \t]++(?>atime|attributes|channels|copy|delete|dirname|executable|exists|extension|isdirectory|isfile|join|link|lstat|mkdir|mtime|nativename|normalize|owned|pathtype|readable|readlink|rename|rootname|separator|size|split|stat|tail|type|volumes|writable)\b)?
|flush|for(?:each)?|format|gets|glob(?:al)?
|history(?>[ \t]++(?>add|change|clear|event|info|keep|nextid|redo)\b)?
|if|then|else(?:if)?
|incr
|info(?>[ \t]++(?>args|body|cmdcount|commands|complete|default|exists|frame|functions|globals|hostname|level|library|loaded|locals|nameofexecutable|patchlevel|procs|script|sharedlibextension|tclversion|vars)\b)?
|interp(?>[ \t]++(?>alias(?:es)?|bgerror|create|debug|delete|eval|exists|expose|hide|hidden|invokehidden|limit|issafe|marktrusted|recursionlimit|share|slaves|target|transfer)\b)?
|join|lappend|lindex|linsert|list|llength|load|lrange|lreplace|lsearch|lset|lsort
|memory(?>[ \t]++(?>active|break_on_malloc|info|objs|onexit|tag|trace_on_at_matlloc|(?>init|trace|validate)(?>[ \t]++(?>on|off)\b)?)\b)?
|namespace(?>[ \t]++(?>children|code|current|delete|ensemble(?>[ \t]++(?>create|configure|exists)\b)?|eval|exists|export|forget|import|inscope|origin|parent|path|qualifiers|tail|upvar|unknown|which)\b)?
|open
|package(?>[ \t]++(?>forget|ifneeded|names|present|provide|require|unknown|vcompare|versions|vsatisfies|prefer(?>[ \t]++(?>latest|stable)\b)?)\b)?
|pid|pkg_mkIndex|proc|puts|pwd|read|regexp
|registry(?>[ \t]++(?>broadcast|delete|get|keys|set|type|values)\b)?
|regsub|rename|resource
|return(?>[ \t]++(?>ok|error|return|break|continue)\b)?
|scan|seek|set|socket|source|split
|string(?>[ \t]++(?>bytelength|compare|equal|first|index
                  |is(?>[ \t]++(?>alnum|alpha|ascii|boolean|control|digit|double|false|graph|integer|list|lower|print|punct|space|tree|upper|wideinteger|wordchar|xdigit)\b)?
                  |last|length|map|match|range|repeat|replace|reverse|tolower|totitle|toupper|trim(?>left|right)?|wordend|wordstart)\b)?
|subst|switch|tell|time
|trace(?>[ \t]++(?>variable|vdelete|vinfo|(?:add|remove|info)(?>[ \t]++(?>command|execution|variable)\b)?)\b)?
|unknown|unload|unset|update|uplevel|upvar|variable|vwait|while)\b
FALSE
FALSE
12
0


0
FALSE
TRUE
FALSE
FALSE




FALSE

0
2
Comment
1
9
TRUE
0


2
End of line

$
FALSE
FALSE
0
0


2
FALSE
FALSE
FALSE
FALSE




FALSE

Line continuation
Line continuation works everywhere in Tcl, even in comments
\\\r?\n
FALSE
FALSE
23
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Quoted word
1
17
FALSE
0


3
Closing quote

"
FALSE
FALSE
17
0


2
FALSE
FALSE
FALSE
FALSE

0
"
code
FALSE
"
Escape

\\.
FALSE
TRUE
17
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Substitution

\$(?:\w++|{[^}"]++}?+)
FALSE
FALSE
14
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

