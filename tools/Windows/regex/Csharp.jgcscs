JGCSCS
5
C#
*.cs
Just Great Software
support@editpadpro.com
http://www.editpadpro.com
http://www.ecma-international.org/publications/standards/Ecma-334.htm
TRUE
//

0
5
#region preprocessor
// comment
public static void Test() {
  Number = 1234;  String = "abcdef";
}
0
FALSE
18
Single-line comment

//.*+
FALSE
FALSE
9
0


0
TRUE
FALSE
FALSE
FALSE




FALSE

Multi-line comment

/\*
FALSE
TRUE
9
0


3
FALSE
FALSE
FALSE
FALSE
0

/**/
code
FALSE
*/
Opening bracket

{
FALSE
FALSE
25
0


0
FALSE
FALSE
FALSE
FALSE
0

{}
code
FALSE
}
Closing bracket

}
FALSE
FALSE
25
0


0
FALSE
FALSE
FALSE
FALSE

0
{}
code
FALSE
{
Opening bracket

\[
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE
0

[]
code
FALSE
]
Closing bracket

]
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE

0
[]
code
FALSE
[
Opening parenthesis

\(
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE
0

()
code
FALSE
)
Closing parenthesis

\)
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE

0
()
code
FALSE
(
Operator

[-+*/=<>%&^|!~?]
FALSE
FALSE
23
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

String
Closing quote optional so an unclosed string is still colored as a string
(")[^"\\\r\n]*+(?:\\(?:.|$)[^"\\\r\n]*+)*+(")?
FALSE
FALSE
17
0


0
TRUE
FALSE
FALSE
FALSE
1
2

code
FALSE
"
Character
Closing quote optional so an unclosed string is still colored as a string
(')[^'\\\r\n]*+(?:\\(?:.|$)[^'\\\r\n]*+)*+(')?
FALSE
FALSE
16
0


0
FALSE
FALSE
FALSE
FALSE
1
2

code
FALSE
'
Verbatim string
Can span multiple lines.  Quotes in the string are doubled rather than escaped.
(@")[^"]*+(?:""[^"]*+)*+(")?
FALSE
TRUE
17
0


0
TRUE
FALSE
FALSE
FALSE
1
2

code
FALSE
"
Identifier

@\w++
FALSE
FALSE
0
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Hexadecimal number

\b0x[0-9A-F]++(?:ul?+|lu?+)?+\b
TRUE
FALSE
19
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Integer

\b[0-9]++(?:ul?+|lu?+)?+\b
TRUE
FALSE
19
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Float

(?:\b[0-9]++)?+\.[0-9]++(?:e[+-]?+[0-9]++)?+[fdm]?+\b
TRUE
FALSE
20
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Reserved words

\b(?>(?#keywords)abstract|as|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|do(?:uble)?+|else|enum|event|explicit|extern|false|finally|fixed|float|for(?:each)?+|goto|if|implicit|in(?:t(?:erface|ernal)?+)?+|is|lock|long|namespace|new|null|object|operator|out|override|params|private|protected|public|readonly|ref|return|sbyte|sealed|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|virtual|void|volatile|while|(?#special identifiers)alias|get|global|partial|remove|set|value|where|yield)\b
FALSE
FALSE
12
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Preprocessor statement
Can be terminated by a single-line comment
^[ \t]*+#[ \t]*+(?>define|undef|if|elif|else|endif|line|error|warning|region|endregion)\b.*?(?=//|$)
FALSE
FALSE
11
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

0
1
Multi-line Comment
1
9
TRUE
0


1
Closing */

\*/
FALSE
FALSE
9
0


2
FALSE
FALSE
FALSE
FALSE

0
/**/
code
FALSE
/*
