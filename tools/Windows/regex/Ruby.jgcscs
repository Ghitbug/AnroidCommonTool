JGCSCS
5
Ruby
*.rb
Just Great Software
support@editpadpro.com
http://www.editpadpro.com
http://www.ruby.org
TRUE
#

0
4
# Ruby
$globalstring = "Hello World"
@instancenumber = (1 + 2) * 3
localregex = /regex/
0
FALSE
21
Comment

#.*+
FALSE
FALSE
9
0


0
TRUE
FALSE
FALSE
FALSE




FALSE

Documentation Comment

^=begin
FALSE
FALSE
10
0


7
FALSE
FALSE
TRUE
FALSE
0

doc
code
FALSE
=end
Regex
A / at the start of the line starts a regular expression
^[ \t]*(/)
FALSE
FALSE
18
0


11
FALSE
FALSE
FALSE
FALSE
1

regex
code
FALSE
/
Float

(?<!\$)(?>\b[0-9]++\.[0-9]++|\.[0-9]++)(?>E[+-]?+[0-9]++)?\b
FALSE
FALSE
20
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Number
Integer, hexadecimal and binary
\b(?<!\$)(?:[0-9]++|0x[0-9a-fA-F]++|0b[01]++)\b
FALSE
FALSE
19
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Reserved Words

\b(?:__FILE__|__LINE__|BEGIN|END|alias|and|begin|break|case|class|def(?:ined)?|do|else|elsif|end|ensure|false|for|if|in|load|module|next|nil|not|or|redo|require|rescue|retry|return|self|super|then|true|undef|unless|until|when|while|yield)\b
FALSE
FALSE
12
0


10
FALSE
FALSE
FALSE
FALSE




FALSE

Operator

[=<>~!/*+-,]++
FALSE
FALSE
23
0


10
FALSE
FALSE
FALSE
FALSE




FALSE

Opening bracket

{
FALSE
FALSE
25
0


10
FALSE
FALSE
FALSE
FALSE
0

{}
code
FALSE
}
Closing bracket

}
FALSE
FALSE
25
0


10
FALSE
FALSE
FALSE
FALSE

0
{}
code
FALSE
{
Opening bracket

\[
FALSE
FALSE
24
0


10
FALSE
FALSE
FALSE
FALSE
0

[]
code
FALSE
]
Closing bracket

]
FALSE
FALSE
24
0


10
FALSE
FALSE
FALSE
FALSE

0
[]
code
FALSE
[
Opening parenthesis

\(
FALSE
FALSE
24
0


10
FALSE
FALSE
FALSE
FALSE
0

()
code
FALSE
)
Closing parenthesis

\)
FALSE
FALSE
24
0


10
FALSE
FALSE
FALSE
FALSE

0
()
code
FALSE
(
Scoped name

[$@]++[a-z_][a-z0-9_]*+
TRUE
FALSE
14
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Single-quoted string

'
FALSE
FALSE
17
0


8
FALSE
FALSE
FALSE
FALSE
0

SQ
code
FALSE
'
Double-quoted string

"
FALSE
FALSE
17
0


9
FALSE
FALSE
FALSE
FALSE
0

DQ
code
FALSE
"
Generalized delimited input
Nested ( and ) delimiters
%[qQwrx]?+\(
FALSE
FALSE
17
0


3
FALSE
FALSE
FALSE
FALSE
0

GDI ()
code
FALSE
)
Generalized delimited input
Nested [ and ] delimiters
%[qQwrx]?+\[
FALSE
FALSE
17
0


0
FALSE
FALSE
FALSE
FALSE
0

GDI []
code
FALSE
]
Generalized delimited input
Nested { and } delimiters
%[qQwrx]?+{
FALSE
FALSE
17
0


0
FALSE
FALSE
FALSE
FALSE
0

GDI {}
code
FALSE
}
Generalized delimited input
Nested < and > delimiters
%[qQwrx]?+<
FALSE
FALSE
17
0


0
FALSE
FALSE
FALSE
FALSE
0

GDI <>
code
FALSE
>
Generalized delimited input

(%[qQwrx]?+([^\r\n[(<{]))(?:.*?(?<!\\)(\2)|.*+)
FALSE
TRUE
17
0


0
TRUE
FALSE
FALSE
FALSE
1
3

code
FALSE
\2
0
9
GDI ()
1
17
TRUE
0


3
Opening (

\(
FALSE
FALSE
17
0


3
FALSE
FALSE
FALSE
FALSE
0

GDI ()
code
FALSE
)
Closing )

\)
FALSE
FALSE
17
0


1
FALSE
FALSE
FALSE
FALSE

0
GDI ()
code
FALSE
(
Escaped character

\\.
FALSE
TRUE
17
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

GDI []
1
17
FALSE
0


3
Opening [

\[
FALSE
FALSE
17
0


4
FALSE
FALSE
FALSE
FALSE
0

GDI []
code
FALSE
]
Closing ]

\]
FALSE
FALSE
17
0


1
FALSE
FALSE
FALSE
FALSE

0
GDI []
code
FALSE
[
Escaped character

\\.
FALSE
TRUE
17
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

GDI {}
1
17
FALSE
0


3
Opening [

\{
FALSE
FALSE
17
0


5
FALSE
FALSE
FALSE
FALSE
0

GDI {}
code
FALSE
}
Closing }

\}
FALSE
FALSE
17
0


1
FALSE
FALSE
FALSE
FALSE

0
GDI {}
code
FALSE
{
Escaped character

\\.
FALSE
TRUE
17
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

GDI <>
1
17
FALSE
0


3
Opening <

<
FALSE
FALSE
17
0


6
FALSE
FALSE
FALSE
FALSE
0

GDI <>
code
FALSE
>
Closing >

>
FALSE
FALSE
17
0


1
FALSE
FALSE
FALSE
FALSE

0
GDI <>
code
FALSE
<
Escaped character

\\.
FALSE
TRUE
17
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Documentation Comment
1
9
TRUE
0


2
Closing delimiter

^=end
FALSE
FALSE
10
0


2
FALSE
FALSE
TRUE
FALSE

0
doc
code
FALSE
=begin
Heading

^=.++
FALSE
FALSE
10
0


0
TRUE
FALSE
TRUE
FALSE




FALSE

Single-quoted string
1
17
TRUE
0


2
Closing '

'
FALSE
FALSE
17
0


2
FALSE
FALSE
FALSE
FALSE

0
SQ
code
FALSE
'
Escaped character

\\.
FALSE
TRUE
17
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Double-quoted string
1
17
TRUE
0


3
Closing "

"
FALSE
FALSE
17
0


2
FALSE
FALSE
FALSE
FALSE

0
DQ
code
FALSE
"
Escaped character

\\.
FALSE
TRUE
17
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Interpolation

#(\$\w+|{[^}]+}?)
FALSE
FALSE
14
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Regex Start
1
0
FALSE
0


2
Regex
A / after a reserved word, bracket or operator starts a regular expression.  The next unescaped / terminates the regex.
\s*(/)
FALSE
FALSE
18
0


11
FALSE
FALSE
FALSE
FALSE
1

regex
code
FALSE
/
No regex

\G
FALSE
FALSE
0
0


2
FALSE
FALSE
FALSE
FALSE




FALSE

Regex Content
1
18
FALSE
0


3
Closing /

/
FALSE
FALSE
18
0


2
FALSE
FALSE
FALSE
FALSE

0
regex
code
FALSE
/
Escaped character

\\.
FALSE
TRUE
18
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Interpolation

#(\$\w+|{[^}]+}?)
FALSE
FALSE
14
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

