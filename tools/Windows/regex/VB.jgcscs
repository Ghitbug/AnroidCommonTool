JGCSCS
5
Visual Basic.NET
*.vb;*.bas
Just Great Software
support@editpadpro.com
http://www.editpadpro.com
http://msdn.microsoft.com/vbasic/
TRUE
'

0
7
#Region "Example"
Rem comment
Public Shared Sub Test()
  ANumber = 1234
  AString = "abcdef"
  ADate = #2005/05/19#
End Sub
0
FALSE
22
String
The closing " is optional, so unterminated strings are colored as well
(")[^"\r\n]*+("c?)?
TRUE
FALSE
17
0


0
FALSE
FALSE
FALSE
FALSE
1
2

code
FALSE
"
Preprocessor statement
Can be terminated by a comment
^[ \t]*+#.*?(?=$|'|rem)
FALSE
FALSE
11
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Date
Closing # is optional, so unterminated dates are colored as well
#[^#\r\n]*+#?
FALSE
FALSE
21
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Documentation Comment

'''.*+
FALSE
FALSE
10
0


0
TRUE
FALSE
FALSE
FALSE




FALSE

Comment

'.*+
FALSE
FALSE
9
0


0
TRUE
FALSE
FALSE
FALSE




FALSE

Comment

\brem\b.*+
TRUE
FALSE
9
0


0
TRUE
FALSE
FALSE
FALSE




FALSE

begin block
Keywords that begin a block terminated with "end keyword"; (if is omitted because "end if" is optional)
\b(?>class|get|function|module|property|select|set|sub|synclock|try|using|while|with)\b
TRUE
FALSE
12
0


0
FALSE
FALSE
FALSE
FALSE
0

\0
code
FALSE
End \0
end

\bend[ \t]+(class|get|function|module|property|select|set|sub|synclock|try|using|while|with)\b
TRUE
FALSE
12
0


0
FALSE
FALSE
FALSE
FALSE

0
\1
code
FALSE
\1
do..loop

\bdo(?>\s+(?>while|until)|\b)
TRUE
FALSE
12
0


0
FALSE
FALSE
FALSE
FALSE
0

doloop
code
FALSE
Loop
do..loop

\bloop(?>\s+(?>while|until)|\b)
TRUE
FALSE
12
0


0
FALSE
FALSE
FALSE
FALSE

0
doloop
code
FALSE
Do
for..next

\bfor\b
TRUE
FALSE
12
0


0
FALSE
FALSE
FALSE
FALSE
0

fornext
code
FALSE
Next
for..next

\bnext\b
TRUE
FALSE
12
0


0
FALSE
FALSE
FALSE
FALSE

0
fornext
code
FALSE
For
Reserved word
We match continue and exit with the following keyword so they don't mess up block matching
\b(?>addhandler|addressof|andalso|alias|and(?:also)?|as(?:sembly)?|auto|boolean|byref|byte|byval|call|case|catch|cbool|cbyte|cchar|cdate|cdbl|cdec|char|cu?int|cu?lng|cobj|const|continue(?>[ \t]+(?>do|for|while))?|cu?short|csng|cstr|ctype|date|decimal|declare|default|delegate|dim|directcast|do(?:uble)?|each|else(?:if)?|end(?:if)?|enum|erase|error|event|exit(?>[ \t]+(?>do|for|while|select|sub|function|property|try))?|false|finally|for|friend|gettype|global|gosub|goto|handles|if|implements|imports|in(?:herits|teger|terface)?|is(?:not)?|let|lib|like|long|me|mod|mustinherit|mustoverride|mybase|myclass|namespace|narrowing|new|next|not(?:hing)?|notinheritable|notoverridable|object|of|on|operator|option(?:al)?|or(?:else)?|overloads|overridable|overrides|paramarray|partial|preserve|private|protected|public|raiseevent|readonly|redim|removehandler|resume|return|sbyte|shadows|shared|short|single|static|st[eo]p|string|structure|then|throw|to|true|trycast|typeof|uinteger|ulong|until|ushort|variant|wend|when|widening|withevents|writeonly|xor)\b
TRUE
TRUE
12
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Integer

\b[0-9]++[%&SIL]?
TRUE
FALSE
19
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Real

\b(?:[0-9]++)?\.?[0-9]+(?:e[+-]?[0-9]+)?[@!#FRD]?
FALSE
FALSE
20
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Hex number

&H[0-9A-F]++[SIL%&]?
TRUE
FALSE
19
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Octal number

&O[0-7]++[SIL%&]?
TRUE
FALSE
19
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Operator

[*+-/\^&<=>]++
FALSE
FALSE
23
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Opening parenthesis

\(
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE
0

()
code
FALSE
)
Closing parenthesis

\)
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE

0
()
code
FALSE
(
Opening brace

{
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE
0

{}
code
FALSE
}
Closing brace

}
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE

0
{}
code
FALSE
{
0
0
