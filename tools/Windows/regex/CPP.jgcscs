JGCSCS
5
C/C++
*.c;*.cpp;*.h;*.hpp
Just Great Software
support@editpadpro.com
http://www.editpadpro.com/

TRUE
//

0
6
#define preprocessor
// comment
public void Test() {
  Integer = 42;  Float = 3.1415;
  String = "EditPad Pro";  Char = 'A';
}
0
FALSE
18
Single-line comment
Backslash at the end of a line continues the comment on the next line
//[^\\\r\n]*+(?:\\(?:\r\n|.)?+[^\\\r\n]*+)*+
FALSE
FALSE
9
0


0
TRUE
FALSE
FALSE
FALSE




FALSE

Multi-line comment

/\*
FALSE
TRUE
9
0


3
FALSE
FALSE
FALSE
FALSE
0

/**/
code
FALSE
*/
Preprocessor statement

^[ \t]*+#
FALSE
TRUE
11
0


4
FALSE
FALSE
FALSE
FALSE




FALSE

Operator

[-+*/=<>%&^|!~?]
FALSE
FALSE
23
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Opening bracket

{
FALSE
FALSE
25
0


0
FALSE
FALSE
FALSE
FALSE
0

{}
code
FALSE
}
Closing bracket

}
FALSE
FALSE
25
0


0
FALSE
FALSE
FALSE
FALSE

0
{}
code
FALSE
{
Opening bracket

\[
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE
0

[]
code
FALSE
]
Closing bracket

]
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE

0
[]
code
FALSE
[
Opening parenthesis

\(
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE
0

()
code
FALSE
)
Closing parenthesis

\)
FALSE
FALSE
24
0


0
FALSE
FALSE
FALSE
FALSE

0
()
code
FALSE
(
String

(?:\b[LuU])?"
FALSE
FALSE
17
0


5
FALSE
FALSE
FALSE
FALSE
0

DQ
code
FALSE
"
C++11 Raw String

(\bR[LuU]?"([^\r\n(]{0,16})\().*?(\)\2")
FALSE
TRUE
17
0


0
FALSE
FALSE
FALSE
FALSE
1
3
R
code
FALSE

Unclosed C++11 Raw String

(\bR[LuU]?"([^\r\n(]{0,16})\().*+
FALSE
TRUE
17
0


0
FALSE
FALSE
FALSE
FALSE
1

R
code
FALSE
)\2"
Character
Closing quote optional so an unclosed string is still colored as a string
(')[^'\\\r\n]*+(?:\\(?:.|$)[^'\\\r\n]*+)*+(')?
FALSE
FALSE
16
0


0
FALSE
FALSE
FALSE
FALSE
1
2
SQ
code
FALSE
'
Float

(?>\b[0-9]++\.[0-9]++|\.[0-9]++)(?>E[+-]?+[0-9]++)?[FL]?+\b
TRUE
FALSE
20
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Integer

\b[0-9]++\b
FALSE
FALSE
19
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Hexadecimal

\b0x[a-f0-9]++\b
TRUE
FALSE
19
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Reserved words

\b(?>__asm|_asm|asm|auto|__automated|break|bool|case|catch|__cdecl|_cdecl|cdecl|char|class|__classid|__closure|const(?:_cast)?+|continue|__declspec|default|delete|__dispid|dllexport|dllimport|do(?:uble)?+|dynamic_cast|else|enum|__except|explicit|_export|__export|extern|false|__fastcall|_fastcall|__finally|float|for|friend|goto|if|__import|_import|inline|int|__int8|__int16|__int32|__int64|long|mutable|namespace|new|operator|__pascal|_pascal|pascal|private|protected|__property|public|__published|register|reinterpret_cast|return|__rtti|short|signed|sizeof|static(?:_cast)?+|__stdcall|_stdcall|struct|switch|template|this|__thread|throw|true|__try|try|typedef|typename|typeid|union|using|unsigned|virtual|void|volatile|wchar_t|while)\b
FALSE
FALSE
12
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

0
3
Multi-line Comment
1
9
TRUE
0


1
Closing */

\*/
FALSE
FALSE
9
0


1
FALSE
FALSE
FALSE
FALSE

0
/**/
code
FALSE
/*
Preprocessor
1
11
FALSE
0


4
Continue
Backslash lets the preprocessor statement continue to the next line.  Supports all three Win/UNIX/Mac line break styles.
\\(?:\r\n?|\n)
FALSE
FALSE
11
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

End of line
Preprocessor statement ends at the end of the line
$
FALSE
FALSE
11
0


2
FALSE
FALSE
FALSE
FALSE




FALSE

Single-line comment
Comment ends the preprocessor statement
//[^\\\r\n]*+(?:\\(?:\r\n|.)?+[^\\\r\n]*+)*+
FALSE
FALSE
9
0


2
TRUE
FALSE
FALSE
FALSE




FALSE

Multi-line comment

/\*
FALSE
TRUE
9
0


3
FALSE
FALSE
FALSE
FALSE
0

/**/
code
FALSE
*/
String
1
17
TRUE
0


4
Closing quote

"
FALSE
FALSE
17
0


2
FALSE
FALSE
FALSE
FALSE

0
DQ
code
FALSE
"
Continue
Backslash lets the string continue to the next line.  Supports all three Win/UNIX/Mac line break styles.
\\(?:\r\n|[\r\n])
FALSE
FALSE
17
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

Escaped character

\\.
FALSE
FALSE
17
0


0
FALSE
FALSE
FALSE
FALSE




FALSE

End of line
Highlight unterminated strings until the end of the line
$
FALSE
FALSE
17
0


2
FALSE
FALSE
FALSE
FALSE




FALSE

